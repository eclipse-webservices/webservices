<?xml version="1.0" encoding="utf-8"?>
<!--Arbortext, Inc., 1988-2006, v.4002-->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN"
 "reference.dtd">
<reference id="axisemitterpreferences" xml:lang="en-us">
<title>Axis emitter preferences</title>
<shortdesc>The Axis Emitter preferences page allows you to set the following
preferences used when creating or consuming Axis Web services.</shortdesc>
<prolog><metadata>
<keywords><indexterm>preferences<indexterm>Web services<indexterm>Axis</indexterm></indexterm></indexterm>
<indexterm>Web services<indexterm>preferences<indexterm>Axis</indexterm></indexterm></indexterm>
</keywords>
</metadata></prolog>
<refbody>
<section><title>WSDL2Java</title><dl><dlentry>
<dt>Generate code for all elements:</dt>
<dd>By default, WSDL2Java only generates code for those elements in the WSDL
file that are referenced. For additional information regarding how referencing
works refer to the Axis reference guide: <xref href="http://ws.apache.org/axis/java/reference.html"
scope="external"></xref></dd>
</dlentry><dlentry>
<dt>Emits separate Helper classes for metadata:</dt>
<dd>If you select this option WSDL2Java will create a separate helper class
that contains the metadata rather than including it in the skeleton.</dd>
</dlentry><dlentry>
<dt>Prefers building beans to straight arrays for wrapped XML array types:</dt>
<dd>The default behavior is to map this XML construct: <codeblock>&lt;element name="array">
 &lt;complexType>
  &lt;sequence>
   &lt;element name="item" type="xs:string"/>
  &lt;/sequence>
 &lt;/complexType>
&lt;/element></codeblock>to a Java String array (String[]). If you would rather
a specific JavaBean class (ArrayOfString) be generated for these types of
schemas, select this option. </dd>
</dlentry><dlentry>
<dt>Add scope to deploy.wsdd:</dt>
<dd>This indicates how to deploy the server implementation. Application uses
one instance of the implementation class for all requests. Request creates
a new instance of the implementation class for each request. Session creates
a new instance of the implementation class for each session.</dd>
</dlentry><dlentry>
<dt>Timeout in seconds:</dt>
<dd>The default is 45. Use -1 to disable the timeout.</dd>
</dlentry></dl></section>
<section><title>Java2WSDL</title><dl><dlentry>
<dt>Look for allowed methods in inherited class:</dt>
<dd>If this option is specified, the Java2WSDL parser will look into extended
classes to determine the list of methods to export into the WSDL file. </dd>
</dlentry><dlentry>
<dt>Analyze the service class for compliance to JAX-RPC before generating
code:</dt>
<dd>If selected, the tools will examine the Java service class and its value
types to determine if it satisfies important requirements of the JAX-RPC specification.</dd>
</dlentry></dl></section>
</refbody>
</reference>
