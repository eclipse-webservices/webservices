!-- REQUIRED. Differentiates from "client" scenario.
scenarioType=service

!-- REQUIRED.  Workspace relative URI to the input WSDL or Java.
InitialSelection 

Project  
ComponentName

ServerWizardWidgetOutputCommand
!--ServiceTypeRuntimeServer 
Server.RuntimeId(String)
Server.ServerId(String)
Server.TypeId(String)
StartService
TestService
PublishService
GenerateProxy
!--ClientTypeRuntimeServer
!-- do I need these without a combined scenario??
Client.RuntimeId(String)
Client.ServerId(String)
Client.TypeId(String)

CreateMonitorCommand
MonitorService
ComputeEndpointCommand
MonitorService
    
ServerExtensionDefaultingCommand
ServiceJ2EEVersion
ServiceProjectName
ServiceComponentName
ServiceEarProjectName
ServiceEarComponentName
ServiceNeedEAR

FinishTestFragment
LaunchedServiceTestName

TestDefaultingFragment
LaunchedServiceTestName

FinishTestFragment
TestService
TestID

PublishToPrivateUDDICommandFragment
PublishToPrivateUDDI

LaunchFragment
PublishToPrivateUDDI
PublishToPublicUDDI

!-- AXIS SERVICE ----
!-- <jvh - need this in addition to initialselection??>   
ObjectSelection
 
!-- All scenarios. String: workspace relative URI to property file containing mappings - same format as currently used in Wizard Import... 
Mappings
!-- Top down - String: the workspace relative URI for a Java source folder for the generated Java code - must be existing workspace source folder
JavaOutput  
!-- Bottom up - comma delimited string of method names to be exposed in output WSDL
Methods
!-- Bottom up - String: one of: RPC, DOCUMENT, WRAPPED
Style 
!-- Bottom up - String: one of: LITERAL, ENCODED 
Use 																												 
