###############################################################################
# Copyright (c) 2008 IBM Corporation and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     IBM Corporation - initial API and implementation
#     Shane Clarke - Apache CXF support
###############################################################################
!--ScenarioType REQUIRED. Differentiates from "service" scenario.
ScenarioType=client

!--InitialSelection REQUIRED.  Workspace relative URI to the input WSDL or Java.
InitialSelection=/dynamicWebProjectName/WebContent/wsdl/myService.wsdl

!--Utility property values - use these to list values for the following properties:
!-- Client.RuntimeId, Client.ServerId 
ListRuntimes=true
ListServers=true
!-- Verbose will list informational messages as well as errors if set to true
Verbose=true
 
!--Client.RuntimeId - ID of web service runtime 
Client.RuntimeId=org.eclipse.jst.ws.cxf.cxfWebServiceRT
!--Client.ServerId - ID of target server 
Client.ServerId=org.eclipse.jst.server.tomcat.60

!--ClientProjectName - name of Client project - this property can be used to give the client project a 
!-- different name than the project containing the initial selection
!--ClientProjectName=clientProjectName

!--ClientEarProjectName- name of Client EAR project - set only if applicable for selected server type
!--ClientEarProjectName=clientEARProjectName

!--ClientComponentType - type of Client project
!--ClientComponentType=template.cxf.core

!-- JavaOutput
!-- Top down - String: the workspace relative URI for a Java source folder for the generated Java code - must be existing workspace source folder
!--JavaOutput=/projectName/JavaSource

!--Generate Client : REQUIRED
GenClient=true

!--Generate a server mainline using JAX-WS APIs
!--GenServer=false
!--Generate starting point code for an implementation object
!--GenImpl=true
!--Generate default values in the implementation and client. Ignored if implementation or client is not being generated
!--DefaultValues=true
!--Enables or disables processing of extended soap header message binding
!--ExtSOAPHeaders=false
!--Enables or disables loading of the default namespace package name mapping
!--DefaultNamespace=true
!--Enables or disables loading of the default excludes namespace mapping
!--DefaultExcludesNamespace=true
!--Enable Auto Name Resolution
!--AutoNameResolution=false

!--Specify the name of the WSDL service for which code is to be generated. The default is to generate code for every service in the WSDL document
!--ServiceName=myService

!--XJC Args: Specify the arguments to be passed directly to the XJC

!--Initialise fields mapped from elements with their default values
!--xjc_dv=false
!--Activate plugin to add a toString() method to generated classes
!--xjc_ts=false
!--Have toString produce multi line output
!--xjc_ts_multi=false
!--Have toString produce single line terse output
!--xjc_ts_simple=false
!--Enable source location support for generated code
!--xjc_locator=false
!--Generate accessor methods with the 'synchronized' keyword
!--xjc_sync_methods=false
!--Add @Generated annotations to the generated code
!--xjc_mark_generated=false

!-- Mappings
!-- Top down scenario. Workspace relative URI to property file containing mappings.
!-- Mappings are used to override the default package names of the generated Java template classes.
!-- The content of the properties file must be of the format namespace=package  
!--Mappings=/dynamicWebProjectName/mappings.txt

!--Binding Files. Comma delimited string of absolute paths in the local file system of JAXWS or JAXB binding files.
!--Bindings=C:/workspace1/dynamicWebProjectName/binding1.xml,C:/workspace1/dynamicWebProjectName/binding2.xml